using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks;

/*  * =====================================  * OOP | Class methods | Student Example  * =====================================  * ----------------  * Declaring method  * ----------------  *      Method is the building block of object-oriented programming. It combines related code together and makes program easier.  *  In C# method declaration, you can declare method by following way:  *    *              <Access modifier> <Return type> <Method Name> (Parameter list)  *              {  *                  Code block (body of the method);  *              }  * --------------  * Calling method  * --------------           *      After creating method, you need to call it in Main() method to execute. In order to call method, you need to create object  *  of containing class, then followed by dot(.) operator you can call the method. If method is static, then there is no need to     *  create object and you can directly call if followed by class name.  *    * ---------------------------  * Static Method and Variables  * ---------------------------  *      Whenever you write a function or declare a variable, it doesn't create an instance in a memory until you create an object  *  of the class. But it you declare any function or variable with a static modifier, it directly creates an instance in a memory   *  and acts globally. The static modifier doesn't reference any object.  *    *      HOW TO: It is very easy to create static modifier with variables, functions and classes. Just put <static> keyword before  *              the return data type of method.  * -------------  * Main() method  * -------------  *      In C# programming the Main() method is where program starts execution. It is the main entry point of program that executes all  *  objects and invokes method to execute. The can be only one Main() method in C#. However, the C# Main() method can be void or  *  int return type. It must be inside a class or stuct and must be declared with static modifier. It is the main place where a program  *  starts the execution and end. The Main() method can have a parameter and these parameters are known as zero-indexed command line arguments.  *    *  #Here we have example with Student object of using methods in classes below:  *   */

namespace MyProject_78 {     class Program     {         static Student GetStudent()         {             Student student = new Student();              student.firstName = "Alexandr";             student.lastName = "Cocier";             student.middleName = "Oleg";             student.age = 25;             student.id = Guid.NewGuid();             student.group = "CIC-1601";                          return student;         }          static void Main(string[] args)         {             var firstStudent = GetStudent();             // We call a method from the Student class on the firstStudent object, which is an instance of the Student class             firstStudent.Print();               Console.WriteLine("\n");              var secondStudent = new Student();             secondStudent.firstName = "Erica";             secondStudent.lastName = "Secrieru";             secondStudent.age = 25;             secondStudent.Print();              Console.WriteLine("\n");              Console.Write("Student Full Name: ");             Console.WriteLine(firstStudent.GetFullName());         }     } } 